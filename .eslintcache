[{"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/App.tsx":"1","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/index.tsx":"2","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/RedirectPage.tsx":"3","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/DashboardPage.tsx":"4","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/LandingPage.tsx":"5","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/AuthStore.ts":"6","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Header.tsx":"7","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SongCard.tsx":"8","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Lyrics.tsx":"9","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SettingsMenu.tsx":"10","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/SettingsStore.ts":"11","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/LyricsText.tsx":"12"},{"size":1317,"mtime":1614432642425,"results":"13","hashOfConfig":"14"},{"size":273,"mtime":1612113910583,"results":"15","hashOfConfig":"14"},{"size":890,"mtime":1614432601265,"results":"16","hashOfConfig":"14"},{"size":1912,"mtime":1613312175482,"results":"17","hashOfConfig":"14"},{"size":1713,"mtime":1614432780926,"results":"18","hashOfConfig":"14"},{"size":152,"mtime":1612168251796,"results":"19","hashOfConfig":"14"},{"size":1235,"mtime":1612346433459,"results":"20","hashOfConfig":"14"},{"size":835,"mtime":1612365887423,"results":"21","hashOfConfig":"14"},{"size":2591,"mtime":1614416381066,"results":"22","hashOfConfig":"14"},{"size":4769,"mtime":1613921649738,"results":"23","hashOfConfig":"14"},{"size":324,"mtime":1612353556781,"results":"24","hashOfConfig":"14"},{"size":1225,"mtime":1614419246020,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xbkctk",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/App.tsx",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/index.tsx",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/RedirectPage.tsx",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/DashboardPage.tsx",["54","55","56"],"import { Box, useColorMode } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Lyrics from \"../Components/Lyrics\";\nimport SongCard from \"../Components/SongCard\";\nimport AuthStore from \"../Stores/AuthStore\";\nimport SongStore from \"../Stores/SongStore\";\nimport SettingsStore from \"../Stores/SettingsStore\";\n\nexport function getAxiosConfig(token: string) {\n  return {\n    headers: {\n      Authorization: \"Bearer \" + token,\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n}\n\nexport default function DashboardPage({ history }: any) {\n  const songData: any = SongStore.useState((state) => state.songData);\n\n  const token = AuthStore.useState((state) => state.token);\n\n  const axiosConfig = getAxiosConfig(token ?? \"\");\n\n  function getSongData() {\n    axios\n      .get(\"https://api.spotify.com/v1/me/player/currently-playing\", axiosConfig)\n      .then((res) => {\n        SongStore.update((state) => {\n          state.songData = res.data;\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    getSongData();\n  }, []);\n\n  const { blurredBackground, blurLevel } = SettingsStore.useState((state) => state);\n  const { colorMode } = useColorMode();\n\n  if (!token) {\n    history.push(\"/\");\n  }\n\n  return (\n    <Box>\n      {colorMode == \"dark\" && blurredBackground && (\n        <Box\n          backgroundImage={songData ? `url(${songData.item.album.images[0].url})` : \"\"}\n          backgroundPosition=\"center\"\n          backgroundRepeat=\"no-repeat\"\n          backgroundSize=\"cover\"\n          filter={`blur(${blurLevel}px) brightness(30%)`}\n          position=\"fixed\"\n          top=\"0px\"\n          left=\"0px\"\n          width=\"100%\"\n          height=\"100%\"\n          zIndex=\"-999\"\n        />\n      )}\n      <SongCard />\n      <Lyrics />\n    </Box>\n  );\n}\n",["57","58"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Pages/LandingPage.tsx",["59","60"],"import React from \"react\";\nimport { Box, Container, Text, Button, Heading, VStack } from \"@chakra-ui/react\";\nimport { FaSpotify } from \"react-icons/fa\";\nimport AuthStore from \"../Stores/AuthStore\";\nimport { Redirect } from \"react-router-dom\";\n\nconst spotifyAuthUrl = \"https://accounts.spotify.com/authorize\";\nconst spotifyClientID = \"9895e0ba277e4d509bad2a2efa893e69\";\nconst spotifyAuthScopes = [\n  \"user-read-currently-playing\",\n  \"user-top-read\",\n  \"app-remote-control\",\n  \"user-modify-playback-state\",\n  \"user-read-playback-state\",\n];\n\nfunction getRedirectUri(): string {\n  const spotifyRedirectUriLocalhost = \"http://localhost:3000/redirect\";\n  const spotifyRedirectUriLocalhostIp = \"http://127.0.0.1:3000/redirect\";\n\n  if (window.location.href.includes(\"localhost\")) {\n    return spotifyRedirectUriLocalhost;\n  } else {\n    return spotifyRedirectUriLocalhostIp;\n  }\n}\n\nexport default function LandingPage() {\n  const token = AuthStore.useState((state) => state.token);\n\n  if (token) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/dashboard\",\n        }}\n      />\n    );\n  }\n\n  const redirectUri = getRedirectUri();\n\n  const url = `${spotifyAuthUrl}?client_id=${spotifyClientID}&redirect_uri=${redirectUri}&response_type=token&show_dialog=true&scope=${spotifyAuthScopes\n    .map((scope) => scope + \" \")\n    .join(\"\")\n    .trim()}`;\n\n  function login() {\n    window.location.href = url;\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <VStack mt=\"100px\" spacing=\"100px\">\n        <Heading>Spotify Lyrics</Heading>\n        <Button onClick={login}>\n          <FaSpotify style={{ marginRight: \"10px\" }} />\n          Get Started\n        </Button>\n      </VStack>\n    </Container>\n  );\n}\n","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/AuthStore.ts",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Header.tsx",["61"],"import React, { useEffect, useState } from \"react\";\nimport AuthStore from \"../Stores/AuthStore\";\nimport axios from \"axios\";\nimport { Flex, HStack, Spacer, Image, Text } from \"@chakra-ui/react\";\nimport { getAxiosConfig } from \"../Pages/DashboardPage\";\nimport SettingsMenu from \"./SettingsMenu\";\n\nexport default function Header() {\n  const token = AuthStore.useState((state) => state.token);\n\n  const [user, setUser] = useState<any>();\n  const axiosConfig = getAxiosConfig(token ?? \"\");\n\n  function getUserData() {\n    axios\n      .get(\"https://api.spotify.com/v1/me\", axiosConfig)\n      .then((res) => {\n        setUser(res.data);\n      })\n      .catch((err) => {\n        console.log(\"Header: error while getting user data\", err);\n      });\n  }\n\n  useEffect(() => {\n    if (token) {\n      getUserData();\n    }\n  }, [token]);\n\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <Flex as=\"nav\" justify=\"space-between\" pos=\"fixed\" p=\"10px\" left=\"0px\" top=\"0px\" width=\"100%\">\n      {user && (\n        <HStack>\n          <Image w=\"auto\" h=\"40px\" borderRadius=\"lg\" src={user.images[0].url} />\n          <Text fontWeight=\"bold\">{user.display_name}</Text>\n        </HStack>\n      )}\n      <Spacer />\n      <SettingsMenu />\n    </Flex>\n  );\n}\n","/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SongCard.tsx",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/Lyrics.tsx",["62","63","64","65"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/SettingsMenu.tsx",["66","67","68","69","70","71"],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Stores/SettingsStore.ts",[],"/Users/mihaisolomon/Documents/Projects/ts-spotify-lyrics/src/Components/LyricsText.tsx",["72","73"],{"ruleId":"74","severity":1,"message":"75","line":2,"column":28,"nodeType":"76","messageId":"77","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":43,"column":6,"nodeType":"80","endLine":43,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":54,"column":18,"nodeType":"84","messageId":"85","endLine":54,"endColumn":20},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"74","severity":1,"message":"90","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"91","line":2,"column":26,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},{"ruleId":"78","severity":1,"message":"92","line":29,"column":6,"nodeType":"80","endLine":29,"endColumn":13,"suggestions":"93"},{"ruleId":"74","severity":1,"message":"91","line":2,"column":21,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":36,"column":28,"nodeType":"84","messageId":"85","endLine":36,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":53,"column":27,"nodeType":"84","messageId":"85","endLine":53,"endColumn":29},{"ruleId":"78","severity":1,"message":"94","line":76,"column":6,"nodeType":"80","endLine":76,"endColumn":16,"suggestions":"95"},{"ruleId":"74","severity":1,"message":"96","line":81,"column":26,"nodeType":"76","messageId":"77","endLine":81,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":103,"column":29,"nodeType":"84","messageId":"85","endLine":103,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":143,"column":38,"nodeType":"84","messageId":"85","endLine":143,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":152,"column":44,"nodeType":"84","messageId":"85","endLine":152,"endColumn":46},{"ruleId":"82","severity":1,"message":"83","line":155,"column":53,"nodeType":"84","messageId":"85","endLine":155,"endColumn":55},{"ruleId":"82","severity":1,"message":"83","line":159,"column":39,"nodeType":"84","messageId":"85","endLine":159,"endColumn":41},{"ruleId":"82","severity":1,"message":"83","line":20,"column":21,"nodeType":"84","messageId":"85","endLine":20,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":39,"column":24,"nodeType":"84","messageId":"85","endLine":39,"endColumn":26},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSongData'. Either include it or remove the dependency array.","ArrayExpression",["97"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'Box' is defined but never used.","'Text' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["100"],"React Hook useEffect has a missing dependency: 'getLyricsTextyl'. Either include it or remove the dependency array.",["101"],"'_' is assigned a value but never used.",{"desc":"102","fix":"103"},"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [getSongData]",{"range":"108","text":"109"},"Update the dependencies array to be: [getUserData, token]",{"range":"110","text":"111"},"Update the dependencies array to be: [getLyricsTextyl, songData]",{"range":"112","text":"113"},[1180,1182],"[getSongData]",[814,821],"[getUserData, token]",[2157,2167],"[getLyricsTextyl, songData]"]